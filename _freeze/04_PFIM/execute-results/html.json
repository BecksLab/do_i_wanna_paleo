{
  "hash": "0253c5ee3dbbbab1094afdbec77480c3",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"PFIM\"\ndate: last-modified\nformat:\n    html:\n        embed-resources: true\ntitle-block-banner: true\nbibliography: references.bib\n---\n\n## Overview\n\n> @fricke2022 methods discuss how in the *\"using functional traits (especially binary or categorical traits), one can overestimate the ecological similarity of species, and thus the similarity of interaction patterns\"*. \n\nThe Paleo Food web Inference Model (PFIM, @shaw2024) uses a series of rules for a set of trait categories (such as habitat and body size) to determine if an interaction can feasibly occur between a species pair.\n\n## Methods\n\n## Example\n\n::: {#acaf690e .cell execution_count=1}\n``` {.julia .cell-code}\nusing CSV\nusing DataFrames\n\ninclude(\"lib/pfim/pfim.jl\")\ninclude(\"lib/internals.jl\")\n\n#Â set seed\nimport Random\nRandom.seed!(66)\n\ntopology = DataFrame(\n    id = Any[],\n    model = String[],\n    connectance = Float64[],\n    complexity = Float64[],\n    distance = Float64[],\n    basal = Float64[],\n    top = Float64[],\n    S1 = Float64[],\n    S2 = Float64[],\n    S4 = Float64[],\n    S5 = Float64[],\n);\n\n# get the name of all communities\nmatrix_names = readdir(joinpath(\"data\", \"raw\"))\nmatrix_names = replace.(matrix_names, \".csv\" => \"\")\n\nfor i in eachindex(matrix_names)\n    \n    file_name = matrix_names[i]\n    df = DataFrame(\n        CSV.File.(\n            joinpath(\"data\", \"raw\", \"$file_name.csv\"),\n        ),\n    )\n\n    d = model_summary(df, file_name, \"pfim\")\n\n    push!(topology, d)\n\nend\n\n# write summaries as .csv\nCSV.write(\"data/processed/topology_pfim.csv\", topology)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n\"data/processed/topology_pfim.csv\"\n```\n:::\n:::\n\n\n## References {.unnumbered}\n\n::: {#refs}\n:::\n\n",
    "supporting": [
      "04_PFIM_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}